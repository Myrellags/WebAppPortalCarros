// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppPortalCarros.Data;

namespace WebAppPortalCarros.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210906201033_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppPortalCarros.Models.Carro", b =>
                {
                    b.Property<int>("CarroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Ano")
                        .HasMaxLength(4)
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Combustível")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Cor")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("Delete")
                        .HasColumnType("bit");

                    b.Property<int>("DonoID")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Matricula")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Mes")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.HasKey("CarroID");

                    b.HasIndex("CarroID")
                        .IsUnique();

                    b.HasIndex("DonoID");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("WebAppPortalCarros.Models.Contacto", b =>
                {
                    b.Property<int>("ContactoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Delete")
                        .HasColumnType("bit");

                    b.Property<int>("DonoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroContacto")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SufixoContacto")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("ContactoID");

                    b.HasIndex("ContactoID")
                        .IsUnique();

                    b.HasIndex("DonoID");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("WebAppPortalCarros.Models.Dono", b =>
                {
                    b.Property<int>("DonoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Delete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("NIF")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("DonoID");

                    b.HasIndex("DonoID")
                        .IsUnique();

                    b.ToTable("Donos");
                });

            modelBuilder.Entity("WebAppPortalCarros.Models.Email", b =>
                {
                    b.Property<int>("EmailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Delete")
                        .HasColumnType("bit");

                    b.Property<int>("DonoID")
                        .HasColumnType("int");

                    b.Property<string>("EmailDono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.HasKey("EmailID");

                    b.HasIndex("DonoID");

                    b.HasIndex("EmailID")
                        .IsUnique();

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("WebAppPortalCarros.Models.Morada", b =>
                {
                    b.Property<int>("MoradaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<bool?>("Delete")
                        .HasColumnType("bit");

                    b.Property<string>("Distrito")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DonoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Numero")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rua")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("MoradaID");

                    b.HasIndex("DonoID");

                    b.HasIndex("MoradaID")
                        .IsUnique();

                    b.ToTable("Moradas");
                });

            modelBuilder.Entity("WebAppPortalCarros.Models.Carro", b =>
                {
                    b.HasOne("WebAppPortalCarros.Models.Dono", "Dono")
                        .WithMany()
                        .HasForeignKey("DonoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dono");
                });

            modelBuilder.Entity("WebAppPortalCarros.Models.Contacto", b =>
                {
                    b.HasOne("WebAppPortalCarros.Models.Dono", "Dono")
                        .WithMany("Contactos")
                        .HasForeignKey("DonoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dono");
                });

            modelBuilder.Entity("WebAppPortalCarros.Models.Email", b =>
                {
                    b.HasOne("WebAppPortalCarros.Models.Dono", "Dono")
                        .WithMany("Emails")
                        .HasForeignKey("DonoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dono");
                });

            modelBuilder.Entity("WebAppPortalCarros.Models.Morada", b =>
                {
                    b.HasOne("WebAppPortalCarros.Models.Dono", "Dono")
                        .WithMany("Moradas")
                        .HasForeignKey("DonoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dono");
                });

            modelBuilder.Entity("WebAppPortalCarros.Models.Dono", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("Emails");

                    b.Navigation("Moradas");
                });
#pragma warning restore 612, 618
        }
    }
}
