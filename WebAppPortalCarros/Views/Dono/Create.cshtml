@model WebAppPortalCarros.Models.ViewModel.DonoViewModel

@{
    ViewData["Title"] = "Create";
}
@using (Html.BeginForm("Create", "Dono", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    <div class="form-body container mb-3">
        <main>

            <div class="row g-5">

                <div class="col-md-12 col-lg-12 ">
                    <h4 class="mb-3">Cadastro Proprietário de Carro</h4>
                    @*<form asp-action="Create" method="post" name="myDono" EncType="multipart/form-data" onsubmit=" return validadeForm()">*@
                    <div class="row g-3">
                        <div class="col-sm-6">
                            @Html.LabelFor(m => m.Dono.Nome, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Dono.Nome, new { @class = "form-control", required = "required", pattern = @"^[A-ZÀ-Ÿ][A-zÀ-ÿ']+\s([A-zÀ-ÿ']\s?)*[A-ZÀ-Ÿ][A-zÀ-ÿ']+$" })
                            @Html.ValidationMessageFor(m => m.Dono.Nome, "", new { @class = "text-danger" })
                            @*<label asp-for="Dono.Nome" class="form-label"></label>
                                <input asp-for="Dono.Nome" type="text" class="form-control" id="nome" placeholder="" value="">
                                <span id="lblNome" style="color:red"></span>*@
                        </div>

                        <div class="col-sm-6">
                            @Html.LabelFor(m => m.Dono.NIF, new { @class = "form-label" })
                            @*<label asp-for="Dono.NIF" class="form-label"></label>*@
                            <div class="input-group has-validation">
                                @Html.TextBoxFor(m => m.Dono.NIF, new { @class = "form-control", required = "required", pattern = @"\d{9}" })
                                @Html.ValidationMessageFor(m => m.Dono.NIF, "", new { @class = "text-danger" })
                                @*<span class="input-group-text"></span>
                                    <input asp-for="Dono.NIF" type="text" class="form-control" id="nif" placeholder="NIF">
                                    <span id="lblNif" style="color:red"></span>*@
                            </div>
                        </div>

                        <div class="col-12">
                            @Html.LabelFor(m => m.Email.EmailDono, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Email.EmailDono, new { @class = "form-control", required = "required", pattern = @"^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$" })
                            @Html.ValidationMessageFor(m => m.Email.EmailDono, "", new { @class = "text-danger" })
                            @*<label asp-for="Email.EmailDono" class="form-label"></label>
                                <input asp-for="Email.EmailDono" type="email" class="form-control" id="txtEmail" placeholder="you@example.com">
                                <span id="lblEmail" style="color:red"></span>*@
                        </div>

                        <div class="col-10">
                            @Html.LabelFor(m => m.Morada.Rua, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Morada.Rua, new { @class = "form-control", required = "required", pattern = @"^[A-ZÀ-Ÿ][A-zÀ-ÿ']+\s([A-zÀ-ÿ']\s?)*[A-ZÀ-Ÿ][A-zÀ-ÿ']+$" })
                            @Html.ValidationMessageFor(m => m.Morada.Rua, "", new { @class = "text-danger" })
                            @*<label asp-for="Morada.Rua" class="form-label"></label>
                                <input asp-for="Morada.Rua" type="text" class="form-control" id="address" placeholder="1234 Main St" required>*@
                        </div>

                        <div class="col-2">
                            @Html.LabelFor(m => m.Morada.Numero, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Morada.Numero, new { @class = "form-control", required = "required", pattern = @"[0-9]*" })
                            @Html.ValidationMessageFor(m => m.Morada.Numero, "", new { @class = "text-danger" })
                            @*<label asp-for="Morada.Numero" class="form-label"></label>
                                <input asp-for="Morada.Numero" type="text" class="form-control" id="numero" placeholder="1234 Main St" >
                                <span id="lblNumero" style="color:red"></span>*@
                        </div>

                        <div class="col-md-5">
                            <label asp-for="Morada.Pais" class="form-label"></label>
                            @*<div class="col-md-12">
                                    @Html.DropDownListFor(m => m.Pais.PaisID,
                                    new SelectList(ViewBag.Paises, "PaisID", "NomePais"),
                                    "Choose...", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Pais.PaisID, "", new { @class = "text-danger" })
                                </div>*@
                        </div>

                        <div class="col-md-4">
                            <div class="col-md-12 dropdown my-2">
                                @Html.LabelFor(model => model.Morada.DistritoID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @{
                                        <select name="FuelId" id="FuelId" class="form-select">
                                            @foreach (var i in ViewBag.Distritos)
                                            {
                                                <option value=@i.Value>@i.Text</option>
                                            }
                                        </select>
                                    }
                                    @Html.ValidationMessageFor(model => model.Morada.DistritoID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(m => m.Morada.CodigoPostal, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Morada.CodigoPostal, new { @class = "form-control", required = "required", pattern = @"\d{4}-\d{3}" })
                            @Html.ValidationMessageFor(m => m.Morada.CodigoPostal, "", new { @class = "text-danger" })
                            @*<label asp-for="Morada.CodigoPostal" class="form-label"></label>
                                <input asp-for="Morada.CodigoPostal" type="text" class="form-control" id="codigoPostal" placeholder="">
                                <span id="lblCodigoPostal" style="color:red"></span>*@
                        </div>
                    </div>

                    <hr class="my-4">

                    <div class="form-check m-3">
                        <input type="checkbox" class="form-check-input" id="same-address">
                        <label class="form-check-label" for="same-address">Ativo</label>
                    </div>

                    <hr class="my-4">
                    <div class="row gy-3 mb-3">
                        <div class="col-md-3">
                            @Html.LabelFor(m => m.Contacto.SufixoContacto, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Contacto.SufixoContacto, new { @class = "form-control", required = "required", pattern = @"\d{3}" })
                            @Html.ValidationMessageFor(m => m.Contacto.SufixoContacto, "", new { @class = "text-danger" })
                            @*<label asp-for="Contacto.SufixoContacto" class="form-label"></label>
                                <input asp-for="Contacto.SufixoContacto" type="text" class="form-control" id="sufixo" placeholder="" required>
                                <span id="lblSufixo" style="color:red"></span>*@
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(m => m.Contacto.NumeroContacto, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Contacto.NumeroContacto, new { @class = "form-control", required = "required", pattern = @"\d{9}" })
                            @Html.ValidationMessageFor(m => m.Contacto.NumeroContacto, "", new { @class = "text-danger" })
                            @*<label asp-for="Contacto.NumeroContacto" class="form-label"></label>
                                <input asp-for="Contacto.NumeroContacto" type="text" class="form-control" id="contacto" placeholder="" required>
                                <span id="lblContacto" style="color:red"></span>*@
                        </div>
                    </div>

                    <hr class="my-4">

                    <button class="w-100 btn btn-primary btn-lg" type="submit">Salvar</button>
                    @*</form>*@
                </div>
            </div>
        </main>
    </div>
}

    @section Scripts{

        <script type="text/javascript">
            function validadeForm() {
                var email = document.forms["myDono"]["txtEmail"].value;
                var exprEmail = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
                var nif = document.forms["myDono"]["nif"].value;
                var nifExp = /\d{9}/
                var nome = document.forms["myDono"]["nome"].value;
                var nomeExp = /^[A-ZÀ-Ÿ][A-zÀ-ÿ']+\s([A-zÀ-ÿ']\s?)*[A-ZÀ-Ÿ][A-zÀ-ÿ']+$/;
                var numero = document.forms["myDono"]["numero"].value;
                var numeroExp = /[0-9]*/;
                var zip = document.forms["myDono"]["codigoPostal"].value;
                var zipExp = /\d{4}-\d{3}/;
                var sufixo = document.forms["myDono"]["sufixo"].value;
                var sufixoExp = /+d{3}/;
                var contacto = document.forms["myDono"]["contacto"].value;
                var contactoExp = /\+\d{3}/;
                if (!exprEmail.test(email)) {
                    lblEmail.innerHTML = "Endereço de e-mail inválido";
                }
                if (!nifExp.test(nif)) {
                    lblNif.innerHTML = "O NIF deve obedecer ao padrão: 000000000";
                }
                if (!nomeExp.test(nome)) {
                    lblNome.innerHTML = "Nome fora do padrão";
                }
                if (!numeroExp.test(numero)) {
                    lblNumero.innerHTML = "Somente números";
                }
                if (!zipExp.test(zip)) {
                    lblCodigoPostal.innerHTML = "O código postal deve obedecer ao padrão: 0000-000";
                }
                if (!sufixoExp.test(sufixo)) {
                    lblCodigoPostal.innerHTML = "O sufixo deve obedecer ao padrão: +000";
                }
                if (!contactoExp.test(contacto)) {
                    lblContacto.innerHTML = "O contacto deve obedecer ao padrão: 00000000";
                }
            }


        </script>
    }


